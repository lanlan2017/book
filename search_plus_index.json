{"./":{"url":"./","title":"简介","keywords":"","body":"简介 本书收录了一些常用的代码,以便日后查用. "},"java/":{"url":"java/","title":"Java","keywords":"","body":"java 这里收集一些常用的java代码,以便日后查用. "},"java/algorithm/":{"url":"java/algorithm/","title":"算法","keywords":"","body":"算法 这里收录一些常用的java算法,以便日后查用. "},"java/algorithm/sort/":{"url":"java/algorithm/sort/","title":"排序","keywords":"","body":"排序算法 这里收录一些常见的java排序算法,以便日后查用. "},"java/algorithm/sort/BubbleSort.html":{"url":"java/algorithm/sort/BubbleSort.html","title":"冒泡排序","keywords":"","body":"1.1 冒泡排序 关键代码 private void bubbleSort(int[] array) { int temp; // 每次能选出一个最大的元素到尾部 for (int i = 0; i array[j + 1]) { temp = array[j]; array[j] = array[j + 1]; array[j + 1] = temp; } } // 打印这次排序的结果 printSortingSteps(array, i); } } "},"java/algorithm/sort/InsertSort.html":{"url":"java/algorithm/sort/InsertSort.html","title":"插入排序","keywords":"","body":"1.2 插入排序 关键代码 private void insertSort(int[] array) { int toInsert; for (int i = 1; i = 0 && array[j] > toInsert) { // 将比要插入的元素大的元素全部向后移动一格 array[j + 1] = array[j]; // 比较下一个格 j--; } // array[j + 1] = toInsert; } } "},"java/algorithm/sort/QuickSort.html":{"url":"java/algorithm/sort/QuickSort.html","title":"快速排序","keywords":"","body":"1.2 快速排序 关键代码 private void quickSort(int[] array) { quickSort(array, 0, array.length - 1); } private void quickSort(int[] array, int left, int right) { if (left i) { // 如果在右边找到比分割点小的数,结束查找 if (array[j] splitPoint) { break; } i++; } if (j > i) { swap(array, i, j); printSwap(array, i, j, left, right);; } } swap(array, left, i); printSwap(array, left, i, left, right); return i; } private void swap(int[] array, int i, int j) { int temp = array[i]; array[i] = array[j]; array[j] = temp; } "},"java/algorithm/sort/SelectSort.html":{"url":"java/algorithm/sort/SelectSort.html","title":"选择排序","keywords":"","body":"1.2 选择排序 关键代码 private void selectSort(int[] array) { // 选择排序法 for (int i = 0; i array[maxIndex]) { maxIndex = j; } } // 将最大的数换到后面 // 缓存最后的数 int temp = array[array.length - 1 - i]; // 将大的数换到最后 array[array.length - 1 - i] = array[maxIndex]; // 将最后的数换到 array[maxIndex] = temp; } } "}}